version: '3'

services:
  backend:
    build: ./services/backend
    ports:
      - 5000:5000
      - 5678:5678
    environment:
      DATABASE_URL: postgres://bachelor:bachelor@db:5432/bachelor_db
      SECRET_KEY: 09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7
      KAFKA_URL: localhost:9092
    volumes:
      - ./services/backend:/app
    command: python -m debugpy --listen 0.0.0.0:5678 --wait-for-client -m uvicorn src.main:app --host 0.0.0.0 --port 5000 --reload
    depends_on:
      - db
      - kafka
    networks: 
      - rmoff_kafka

  frontend:
    build: ./services/frontend
    volumes:
      - './services/frontend:/app'
      - '/app/node_modules'
    ports:
      - 8080:8080
    networks: 
      - rmoff_kafka
      
  db:
    image: postgres:15.1
    environment:
      POSTGRES_USER: bachelor
      POSTGRES_PASSWORD: bachelor
      POSTGRES_DB: bachelor_db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - 5432:5432
    networks: 
      - rmoff_kafka

  zookeeper:
    image: 'confluentinc/cp-zookeeper:latest'
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
    networks: 
      - rmoff_kafka

  kafka:
    image: 'confluentinc/cp-kafka:latest'
    depends_on:
      - zookeeper
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,CONNECTIONS_FROM_HOST://localhost:19092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONNECTIONS_FROM_HOST:PLAINTEXT
      - KAFKA_LISTENERS=PLAINTEXT://:9092,CONNECTIONS_FROM_HOST://:19092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    ports:
      - "9092:9092"
      - "19092:19092"
    networks: 
      - rmoff_kafka
      
volumes:
  postgres_data:

networks: 
  rmoff_kafka:
    name: rmoff_kafka